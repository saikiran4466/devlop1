{"dataflow":{"dfKey":"df463212-19c8-4248-a9ba-6d0d6d82a469","name":"jira_test1","tags":null,"description":null,"definition":"{\"name\":\"jira_test1\",\"version\":0,\"livyServerId\":0,\"engineVariableName\":\"\",\"components\":[{\"udfNames\":[],\"componentId\":0,\"componentName\":\"startComponent\",\"tableName\":\"\",\"category\":\"Start\",\"componentType\":\"UDF\",\"rank\":0,\"dataSourceName\":\"\",\"displayRows\":0,\"dependencies\":[],\"className\":\"com.datagaps.dataflow.models.UDFComponent\",\"executionOption\":\"\",\"excludeNotification\":\"N\"},{\"pluginId\":\"a9670244-0a57-419a-8770-ec28cde95f7d\",\"pluginName\":\"Create a Jira Ticket\",\"pluginOptions\":{\"parameters\":[{\"parameterId\":\"c2744657-b7f4-4887-a115-ec011d2f94db\",\"fieldName\":\"project\",\"displayName\":\"Project Key\",\"value\":\"DS\",\"dataType\":\"String\"},{\"parameterId\":\"0b7a9f89-dc74-4a5d-a9a6-775010d42d6d\",\"fieldName\":\"issuetype\",\"displayName\":\"Issue Type\",\"value\":\"Bug\",\"dataType\":\"Choice\"},{\"parameterId\":\"e7c713c8-418c-4f1e-83de-0e99239dcb1f\",\"fieldName\":\"summary\",\"displayName\":\"Summary\",\"value\":\"quotes check\",\"dataType\":\"String\"},{\"parameterId\":\"162a3cbd-0711-4588-8c7b-ce5910b237ea\",\"fieldName\":\"description\",\"displayName\":\"Description (Optional)\",\"value\":\"\\\"\\\"\",\"dataType\":\"text\"},{\"parameterId\":\"2db3dab5-41ad-481b-a771-aa01b9d8abf5\",\"fieldName\":\"Priority\",\"displayName\":\"Priority\",\"value\":\"Medium\",\"dataType\":\"Choice\"}],\"inputDatasets\":[],\"outputDatasets\":[],\"dataSources\":[]},\"componentId\":1,\"componentName\":\"Plugin 1\",\"tableName\":\"Plugin_1\",\"category\":\"Processor\",\"componentType\":\"Plugin\",\"rank\":0,\"displayRows\":0,\"dependencies\":[],\"options\":{},\"className\":\"com.datagaps.dataflow.models.PluginComponent\",\"executionOption\":\"\",\"excludeNotification\":\"N\"},{\"code\":\"import requests\\r\\nimport json\\r\\nimport io\\r\\nimport base64\\r\\nimport re\\r\\nimport psycopg2\\r\\nfrom datagaps_utilities.config import properties_file_path\\r\\nfrom jproperties import Properties\\r\\n\\r\\nhost \\u003d port \\u003d database \\u003d username \\u003d password \\u003d \\\"\\\"\\r\\nconfigs \\u003d Properties()\\r\\nwith open(properties_file_path, \\\"rb\\\") as config_file:\\r\\n\\tconfigs.load(config_file)\\r\\n\\thost, port, database \\u003d re.match(\\\"jdbc:postgresql://(.*?):(.*?)/(.*)\\\", configs[\\\"datasource.jdbcUrl\\\"].data).groups()\\r\\n\\tdatabase \\u003d database.split(\\\"?\\\")[0]\\r\\n\\tusername \\u003d configs[\\\"datasource.userName\\\"].data\\r\\n\\tpassword \\u003d spark.sparkContext._jvm.com.datagaps.core.engine.utils.CodeUtils.getDecryptedPassword(configs[\\\"datasource.password\\\"].data)\\r\\n\\r\\n\\twith psycopg2.connect(\\r\\n\\t\\tdatabase\\u003ddatabase,\\r\\n\\t\\tuser\\u003dusername,\\r\\n\\t\\tpassword\\u003dpassword,\\r\\n\\t\\thost\\u003dhost,\\r\\n\\t\\tport\\u003dport\\r\\n\\t) as con:\\r\\n\\t\\r\\n\\t\\twith con.cursor() as cur:\\r\\n\\t\\t\\tcur.execute(\\\"\\\"\\\"select url,username,password from t_server where type\\u003d\\u0027jira\\u0027 and container_id\\u003d81\\\"\\\"\\\")\\r\\n\\t\\t\\tjira_cred_result \\u003d cur.fetchall()\\r\\n\\t\\t\\tif(len(jira_cred_result)\\u003e0):\\r\\n\\t\\t\\t\\tjira_base_url \\u003d jira_cred_result[0][0]\\r\\n\\t\\t\\t\\tjira_username \\u003d jira_cred_result[0][1]\\r\\n\\t\\t\\t\\tjira_password \\u003d spark.sparkContext._jvm.com.datagaps.core.engine.utils.CodeUtils.getDecryptedPassword(jira_cred_result[0][2])\\r\\n\\t\\t\\telse:\\r\\n\\t\\t\\t\\traise Exception(\\\"Jira details are not configured. Please add the Jira details in the integration section. Please check the documentation for more details.\\\")\\r\\n\\t\\t\\r\\n\\r\\n\\t\\t\\theaders\\u003d{\\r\\n\\t\\t\\t\\t\\\"Accept\\\": \\\"application/json\\\",\\r\\n\\t\\t\\t\\t\\\"Content-Type\\\": \\\"application/json\\\"\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\tauth \\u003d (jira_username,jira_password)\\r\\n\\t\\t\\tdescription \\u003d \\u0027\\\"\\\"\\u0027\\r\\n\\t\\t\\tif not description:\\r\\n\\t\\t\\t\\tdescription \\u003d \\\"\\\"\\r\\n\\t\\t\\tpayload \\u003d {\\r\\n\\t\\t\\t  \\\"fields\\\": {\\r\\n\\t\\t\\t\\t  \\\"project\\\":\\r\\n\\t\\t\\t\\t  {\\r\\n\\t\\t\\t\\t\\t\\\"key\\\": \\\"DS\\\"\\r\\n\\t\\t\\t\\t  },\\r\\n\\t\\t\\t\\t  \\\"summary\\\": \\\"quotes check\\\",\\r\\n\\t\\t\\t\\t  \\\"description\\\": description,\\r\\n\\t\\t\\t\\t  \\\"issuetype\\\": {\\r\\n\\t\\t\\t\\t\\t\\\"name\\\": \\\"Bug\\\"\\r\\n\\t\\t\\t\\t  }\\r\\n\\t\\t\\t  }\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\tif \\\"Medium\\\" !\\u003d \\\"Default\\\":\\r\\n\\t\\t\\t\\tpayload[\\\"fields\\\"][\\\"priority\\\"] \\u003d {\\\"name\\\":\\\"Medium\\\"}\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\tpayload\\u003djson.dumps(payload)\\r\\n\\t\\t\\tresponse\\u003drequests.post(f\\\"{jira_base_url}/rest/api/2/issue\\\",headers\\u003dheaders,data\\u003dpayload,auth\\u003dauth)\\r\\n\\t\\t\\tprint(response.status_code)\\r\\n\\t\\t\\tif response.status_code \\u003d\\u003d 201:\\r\\n\\t\\t\\t\\tprint(\\\"Jira ticket created successfully and the id is:\\\"+response.json()[\\\"id\\\"])\\r\\n\\t\\t\\telse:\\r\\n\\t\\t\\t\\tif(\\\"errorMessages\\\" in response.text):\\r\\n\\t\\t\\t\\t    #print(response.text)\\r\\n\\t\\t\\t\\t    raise Exception((\\\" \\\").join(response.json()))\\r\\n\\t\\t\\t\\telse:\\r\\n\\t\\t\\t\\t\\tprint(response.text)\\r\\n\\t\\t\\t\\t\\traise Exception(\\\"Failed to create Jira ticket check logs for more details.\\\")\\r\\n\\r\\n\\r\\n\",\"kind\":\"pyspark\",\"dataSourceId\":0,\"componentId\":2,\"componentName\":\"Code 2\",\"tableName\":\"\",\"category\":\"Processor\",\"componentType\":\"Code\",\"rank\":0,\"dataSourceName\":\"\",\"displayRows\":50,\"dependencies\":[],\"options\":{},\"className\":\"com.datagaps.dataflow.models.CodeComponent\",\"executionOption\":\"\",\"excludeNotification\":\"N\"}],\"isDeleteWorkSchemaTable\":\"N\"}","parameters":"[{\"name\":\"limit_rows\",\"defValueInInteractiveMode\":\"limit 10\",\"defValueInBatchMode\":\"limit 1000\"}]","version":3,"maxComponentId":2,"livyOptions":"{\"kind\":\"spark\",\"proxyUser\":\"\",\"jars\":[],\"pyFiles\":[],\"files\":[],\"driverMemory\":\"\",\"driverCores\":0,\"executorMemory\":\"\",\"executorCores\":0,\"numExecutors\":0,\"archives\":[],\"queue\":\"\",\"name\":\"\",\"conf\":{},\"heartbeatTimeoutInSecond\":0}","isDeleted":"N","userName":null,"type":"dataflow","environmentName":"","folderPath":"Dataflow","workSchemaName":null},"analysis":[],"datamodels":[],"tagDetails":[],"dataCompares":[]}