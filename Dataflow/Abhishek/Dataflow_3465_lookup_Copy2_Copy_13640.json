{"dataflow":{"dfKey":"3a65692b-dfc5-4686-bf05-215cf8cbc0c0","name":"Dataflow_3465_lookup_Copy2_Copy_13640","tags":null,"description":"","definition":"{\"name\":\"Dataflow_3465_lookup_Copy2_Copy_13640\",\"description\":\"\",\"version\":0,\"livyServerId\":0,\"engineVariableName\":\"test_cluster2\",\"components\":[{\"udfNames\":[],\"componentId\":0,\"componentName\":\"startComponent\",\"tableName\":\"\",\"category\":\"Start\",\"componentType\":\"UDF\",\"rank\":0,\"dataSourceName\":\"\",\"displayRows\":0,\"dependencies\":[],\"className\":\"com.datagaps.dataflow.models.UDFComponent\",\"excludeNotification\":\"N\"},{\"partitionOptions\":{\"partitionType\":\"\",\"name\":\"\"},\"enableTrim\":\"N\",\"easyQueryDefJson\":{\"sqlQuery\":\"\"},\"componentId\":1,\"componentName\":\"JDBC 1\",\"tableName\":\"JDBC_1\",\"category\":\"Source\",\"componentType\":\"JDBC\",\"rank\":0,\"dataSourceName\":\"\",\"displayRows\":50,\"dependencies\":[],\"options\":{\"dbTable\":\"select CHANNEL_ID,CHANNEL_DESC,CHANNEL_CLASS,CHANNEL_CLASS_ID,CHANNEL_TOTAL,CHANNEL_TOTAL_ID from SH.CHANNELDBSINKLAK2\"},\"className\":\"com.datagaps.dataflow.models.JDBCComponent\",\"isCheckpointEnabled\":\"N\",\"dataSourceLogicalName\":\"oracle102\",\"excludeNotification\":\"N\"},{\"partitionOptions\":{\"partitionType\":\"\",\"name\":\"\"},\"easyQueryDefJson\":{\"sqlQuery\":\"\"},\"componentId\":3,\"componentName\":\"SQL 3\",\"tableName\":\"SQL_3\",\"category\":\"Processor\",\"componentType\":\"SQL\",\"rank\":0,\"dataSourceName\":\"\",\"displayRows\":50,\"dependencies\":[1],\"options\":{\"dbTable\":\"select * from JDBC_1 where channel_id \\u003e3\"},\"className\":\"com.datagaps.dataflow.models.SQLComponent\",\"isCheckpointEnabled\":\"N\",\"excludeNotification\":\"N\"},{\"sourceDataFrame\":\"JDBC_1\",\"batchSize\":1000,\"query\":\"select CHANNEL_ID,CHANNEL_DESC,CHANNEL_CLASS,CHANNEL_CLASS_ID,CHANNEL_TOTAL,CHANNEL_TOTAL_ID from SH.CHANNELDBSINKLAK2\",\"columnMapping\":[{\"columnName\":\"CHANNEL_ID\",\"columnDataType\":\"decimal(19,4)\",\"lookUpcolumnName\":\"CHANNEL_ID\",\"lookUpdataType\":\"decimal(19,4)\",\"isDatatypeChange\":\"N\"}],\"temporaryDataSourceName\":\"PARQUET_s3_22_12\",\"componentId\":2,\"componentName\":\"LOOKUP 2\",\"tableName\":\"LOOKUP_2\",\"category\":\"Source\",\"componentType\":\"LOOKUP\",\"rank\":0,\"dataSourceName\":\"\",\"displayRows\":50,\"dependencies\":[1],\"options\":{\"dbTable\":\"select CHANNEL_ID,CHANNEL_DESC,CHANNEL_CLASS,CHANNEL_CLASS_ID,CHANNEL_TOTAL,CHANNEL_TOTAL_ID from SH.CHANNELDBSINKLAK2\"},\"className\":\"com.datagaps.dataflow.models.LookUpComponent\",\"isCheckpointEnabled\":\"N\",\"dataSourceLogicalName\":\"oracle102\",\"excludeNotification\":\"N\"},{\"sourceDataFrame\":\"JDBC_1\",\"targetDataFrame\":\"SQL_3\",\"mapping\":[{\"sourceColumn\":\"CHANNEL_ID\",\"sourceType\":\"decimal(19,4)\",\"targetColumn\":\"CHANNEL_ID\",\"targetType\":\"decimal(19,4)\",\"unique\":\"Y\",\"sourceDataFormat\":\"\",\"targetDataFormat\":\"\",\"sourceTypeChange\":\"N\",\"targetTypeChange\":\"N\"},{\"sourceColumn\":\"CHANNEL_TOTAL_ID\",\"sourceType\":\"decimal(19,4)\",\"targetColumn\":\"CHANNEL_TOTAL_ID\",\"targetType\":\"decimal(19,4)\",\"unique\":\"N\",\"sourceDataFormat\":\"\",\"targetDataFormat\":\"\",\"sourceTypeChange\":\"N\",\"targetTypeChange\":\"N\",\"upperThreshold\":2.0,\"lowerThreshold\":1.0,\"hasThreshold\":\"Y\",\"thresholdUnit\":\"number\"},{\"sourceColumn\":\"CHANNEL_TOTAL\",\"sourceType\":\"string\",\"targetColumn\":\"CHANNEL_TOTAL\",\"targetType\":\"string\",\"unique\":\"N\",\"sourceDataFormat\":\"\",\"targetDataFormat\":\"\",\"sourceTypeChange\":\"N\",\"targetTypeChange\":\"N\"},{\"sourceColumn\":\"CHANNEL_CLASS_ID\",\"sourceType\":\"decimal(19,4)\",\"targetColumn\":\"CHANNEL_CLASS_ID\",\"targetType\":\"decimal(19,4)\",\"unique\":\"N\",\"sourceDataFormat\":\"\",\"targetDataFormat\":\"\",\"sourceTypeChange\":\"N\",\"targetTypeChange\":\"N\",\"upperThreshold\":0.0,\"lowerThreshold\":0.0,\"hasThreshold\":\"N\",\"thresholdUnit\":\"\"},{\"sourceColumn\":\"CHANNEL_CLASS\",\"sourceType\":\"string\",\"targetColumn\":\"CHANNEL_CLASS\",\"targetType\":\"string\",\"unique\":\"N\",\"sourceDataFormat\":\"\",\"targetDataFormat\":\"\",\"sourceTypeChange\":\"N\",\"targetTypeChange\":\"N\"},{\"sourceColumn\":\"CHANNEL_DESC\",\"sourceType\":\"string\",\"targetColumn\":\"CHANNEL_DESC\",\"targetType\":\"string\",\"unique\":\"N\",\"sourceDataFormat\":\"\",\"targetDataFormat\":\"\",\"sourceTypeChange\":\"N\",\"targetTypeChange\":\"N\"}],\"onlyInA\":\"Y\",\"onlyInB\":\"Y\",\"difference\":\"Y\",\"enableTrim\":\"N\",\"replaceNull\":\"Y\",\"autoDataTypeConversion\":\"N\",\"columnDifferencesCount\":\"N\",\"ignoreCase\":\"N\",\"hasDuplicates\":\"N\",\"subDataFrames\":[{\"subDataFrameName\":\"_Source_Duplicate\",\"type\":\"Duplicates In A\"},{\"subDataFrameName\":\"_Target_Duplicate\",\"type\":\"Duplicates In B\"},{\"subDataFrameName\":\"_Matched\",\"type\":\"Matched\"},{\"subDataFrameName\":\"_OnlySource\",\"type\":\"Only In A\"},{\"subDataFrameName\":\"_OnlyTarget\",\"type\":\"Only In B\"},{\"subDataFrameName\":\"_Difference\",\"type\":\"Difference\"}],\"onlyInAThresholdUnit\":\"number\",\"onlyInAThreshold\":60.0,\"onlyInBThresholdUnit\":\"number\",\"onlyInBThreshold\":0.0,\"differencesSourceThresholdUnit\":\"number\",\"differencesSourceThreshold\":0.0,\"differencesTargetThresholdUnit\":\"number\",\"differencesTargetThreshold\":0.0,\"componentId\":4,\"componentName\":\"Data Compare 4\",\"tableName\":\"Data_Compare_4\",\"category\":\"Data Quality\",\"componentType\":\"Data Compare\",\"rank\":0,\"dataSourceName\":\"\",\"displayRows\":50,\"dependencies\":[3,1],\"options\":{},\"className\":\"com.datagaps.dataflow.models.DataCompareComponent\",\"isCheckpointEnabled\":\"N\",\"excludeNotification\":\"N\"},{\"partitionOptions\":{\"partitionType\":\"\",\"name\":\"\"},\"easyQueryDefJson\":{\"sqlQuery\":\"\"},\"componentId\":6,\"componentName\":\"SQL 6\",\"tableName\":\"SQL_6\",\"category\":\"Processor\",\"componentType\":\"SQL\",\"rank\":0,\"dataSourceName\":\"\",\"displayRows\":50,\"dependencies\":[4],\"options\":{\"dbTable\":\"Select nvl(CHANNEL_ID , \\u0027null\\u0027) as CHANNEL_ID,nvl(CHANNEL_TOTAL_ID , \\u0027null\\u0027) as CHANNEL_TOTAL_ID,\\u0027\\r\\n\\u0027,\\u0027 V : \\u0027,(CASE WHEN nvl( CAST(CHANNEL_TOTAL_ID as String ) ,\\u0027null\\u0027) \\u003d nvl(CAST(CHANNEL_TOTAL_ID_tgt as String )  , \\u0027null\\u0027) THEN CAST(CHANNEL_TOTAL_ID as String) ELSE concat(\\u0027A : \\u0027,nvl( CAST(CHANNEL_TOTAL_ID as String ) , \\u0027null\\u0027),\\u0027\\r\\n\\u0027,\\u0027 B : \\u0027 ,nvl(CAST(CHANNEL_TOTAL_ID_tgt as String )  , \\u0027null\\u0027) ,\\u0027\\r\\n\\u0027,\\u0027 V : \\u0027,(CASE WHEN CHANNEL_TOTAL_ID_tgt is not null and CHANNEL_TOTAL_ID is not null THEN CHANNEL_TOTAL_ID_tgt -CHANNEL_TOTAL_ID ELSE \\u0027NA\\u0027 END)) END) as CHANNEL_TOTAL_ID_tgt,nvl(CHANNEL_TOTAL , \\u0027null\\u0027) as CHANNEL_TOTAL,nvl(CHANNEL_CLASS_ID , \\u0027null\\u0027) as CHANNEL_CLASS_ID,nvl(CHANNEL_CLASS , \\u0027null\\u0027) as CHANNEL_CLASS,nvl(CHANNEL_DESC , \\u0027null\\u0027) as CHANNEL_DESC from Data_Compare_4 where hash_src \\u003d hash_tgt and nvl(CHANNEL_ID,\\u0027null\\u0027)  \\u003d nvl(CHANNEL_ID_tgt,\\u0027null\\u0027)   and ((CHANNEL_TOTAL_ID_tgt is  null OR CHANNEL_TOTAL_ID is null OR CHANNEL_TOTAL_ID_tgt - CHANNEL_TOTAL_ID \\u003e\\u003d 1.0 and CHANNEL_TOTAL_ID_tgt - CHANNEL_TOTAL_ID \\u003c\\u003d 2.0 or CHANNEL_TOTAL_ID_tgt - CHANNEL_TOTAL_ID \\u003d 0 )) \"},\"className\":\"com.datagaps.dataflow.models.SQLComponent\",\"isCheckpointEnabled\":\"N\",\"excludeNotification\":\"N\"},{\"partitionOptions\":{\"partitionType\":\"\",\"name\":\"\"},\"easyQueryDefJson\":{\"sqlQuery\":\"\"},\"componentId\":7,\"componentName\":\"SQL 7\",\"tableName\":\"SQL_7\",\"category\":\"Processor\",\"componentType\":\"SQL\",\"rank\":0,\"dataSourceName\":\"\",\"displayRows\":50,\"dependencies\":[4],\"options\":{\"dbTable\":\"Select (CASE WHEN nvl( CAST(CHANNEL_ID as String ) ,\\u0027null\\u0027) \\u003d nvl(CAST(CHANNEL_ID_tgt as String )  , \\u0027null\\u0027) THEN CAST(CHANNEL_ID as String) ELSE concat(\\u0027A : \\u0027,nvl( CAST(CHANNEL_ID as String ) , \\u0027null\\u0027),\\u0027\\r\\n\\u0027,\\u0027 B : \\u0027 ,nvl(CAST(CHANNEL_ID_tgt as String )  , \\u0027null\\u0027) ) END) as CHANNEL_ID ,(CASE WHEN nvl( CAST(CHANNEL_TOTAL_ID as String ) ,\\u0027null\\u0027) \\u003d nvl(CAST(CHANNEL_TOTAL_ID_tgt as String )  , \\u0027null\\u0027) THEN CAST(CHANNEL_TOTAL_ID as String) ELSE concat(\\u0027A : \\u0027,nvl( CAST(CHANNEL_TOTAL_ID as String ) , \\u0027null\\u0027),\\u0027\\r\\n\\u0027,\\u0027 B : \\u0027 ,nvl(CAST(CHANNEL_TOTAL_ID_tgt as String )  , \\u0027null\\u0027) ,\\u0027\\r\\n\\u0027,\\u0027 V : \\u0027,(CASE WHEN CHANNEL_TOTAL_ID_tgt is not null and CHANNEL_TOTAL_ID is not null THEN CHANNEL_TOTAL_ID_tgt -CHANNEL_TOTAL_ID ELSE \\u0027NA\\u0027 END)) END) as CHANNEL_TOTAL_ID ,(CASE WHEN nvl(CHANNEL_TOTAL,\\u0027null\\u0027) \\u003d nvl(CHANNEL_TOTAL_tgt , \\u0027null\\u0027) THEN CHANNEL_TOTAL ELSE concat(\\u0027A : \\u0027,nvl(CHANNEL_TOTAL, \\u0027null\\u0027),\\u0027\\r\\n\\u0027,\\u0027 B : \\u0027 ,nvl(CHANNEL_TOTAL_tgt , \\u0027null\\u0027) ) END) as CHANNEL_TOTAL ,(CASE WHEN nvl( CAST(CHANNEL_CLASS_ID as String ) ,\\u0027null\\u0027) \\u003d nvl(CAST(CHANNEL_CLASS_ID_tgt as String )  , \\u0027null\\u0027) THEN CAST(CHANNEL_CLASS_ID as String) ELSE concat(\\u0027A : \\u0027,nvl( CAST(CHANNEL_CLASS_ID as String ) , \\u0027null\\u0027),\\u0027\\r\\n\\u0027,\\u0027 B : \\u0027 ,nvl(CAST(CHANNEL_CLASS_ID_tgt as String )  , \\u0027null\\u0027) ) END) as CHANNEL_CLASS_ID ,(CASE WHEN nvl(CHANNEL_CLASS,\\u0027null\\u0027) \\u003d nvl(CHANNEL_CLASS_tgt , \\u0027null\\u0027) THEN CHANNEL_CLASS ELSE concat(\\u0027A : \\u0027,nvl(CHANNEL_CLASS, \\u0027null\\u0027),\\u0027\\r\\n\\u0027,\\u0027 B : \\u0027 ,nvl(CHANNEL_CLASS_tgt , \\u0027null\\u0027) ) END) as CHANNEL_CLASS ,(CASE WHEN nvl(CHANNEL_DESC,\\u0027null\\u0027) \\u003d nvl(CHANNEL_DESC_tgt , \\u0027null\\u0027) THEN CHANNEL_DESC ELSE concat(\\u0027A : \\u0027,nvl(CHANNEL_DESC, \\u0027null\\u0027),\\u0027\\r\\n\\u0027,\\u0027 B : \\u0027 ,nvl(CHANNEL_DESC_tgt , \\u0027null\\u0027) ) END) as CHANNEL_DESC  from Data_Compare_4 where  nvl(hash_src,0) \\u003c\\u003e nvl(hash_tgt,0) and nvl(CHANNEL_ID,\\u0027null\\u0027)  \\u003d nvl(CHANNEL_ID_tgt,\\u0027null\\u0027)  and ((hash_tgt is not null and hash_src is not null))  or ((CHANNEL_TOTAL_ID_tgt - CHANNEL_TOTAL_ID \\u003c 1.0 or CHANNEL_TOTAL_ID_tgt - CHANNEL_TOTAL_ID \\u003e 2.0) and (CHANNEL_TOTAL_ID_tgt - CHANNEL_TOTAL_ID \\u003c\\u003e 0 )) \"},\"className\":\"com.datagaps.dataflow.models.SQLComponent\",\"isCheckpointEnabled\":\"N\",\"excludeNotification\":\"N\"},{\"partitionOptions\":{\"partitionType\":\"\",\"name\":\"\"},\"easyQueryDefJson\":{\"sqlQuery\":\"\"},\"componentId\":8,\"componentName\":\"SQL 8\",\"tableName\":\"SQL_8\",\"category\":\"Processor\",\"componentType\":\"SQL\",\"rank\":0,\"dataSourceName\":\"\",\"displayRows\":50,\"dependencies\":[7],\"options\":{\"dbTable\":\"Select nvl(CHANNEL_ID , \\u0027null\\u0027) as CHANNEL_ID ,nvl(CHANNEL_TOTAL_ID , \\u0027null\\u0027) as CHANNEL_TOTAL_ID,\\u0027\\r\\n\\u0027,\\u0027 V : \\u0027,(CASE WHEN CHANNEL_TOTAL_ID_tgt is not null and CHANNEL_TOTAL_ID is not null THEN CHANNEL_TOTAL_ID_tgt -CHANNEL_TOTAL_ID ELSE \\u0027NA\\u0027 END) as CHANNEL_TOTAL_ID ,nvl(CHANNEL_TOTAL , \\u0027null\\u0027) as CHANNEL_TOTAL ,nvl(CHANNEL_CLASS_ID , \\u0027null\\u0027) as CHANNEL_CLASS_ID ,nvl(CHANNEL_CLASS , \\u0027null\\u0027) as CHANNEL_CLASS ,nvl(CHANNEL_DESC , \\u0027null\\u0027) as CHANNEL_DESC   from Data_Compare_4 where hash_src \\u003d hash_tgt and nvl(CHANNEL_ID,\\u0027null\\u0027)  \\u003d nvl(CHANNEL_ID_tgt,\\u0027null\\u0027)   and ((CHANNEL_TOTAL_ID_tgt is  null OR CHANNEL_TOTAL_ID is null OR CHANNEL_TOTAL_ID_tgt - CHANNEL_TOTAL_ID \\u003e\\u003d 1.0 and CHANNEL_TOTAL_ID_tgt - CHANNEL_TOTAL_ID \\u003c\\u003d 2.0 or CHANNEL_TOTAL_ID_tgt - CHANNEL_TOTAL_ID \\u003d 0 )) \"},\"className\":\"com.datagaps.dataflow.models.SQLComponent\",\"isCheckpointEnabled\":\"N\",\"excludeNotification\":\"N\"},{\"partitionOptions\":{\"partitionType\":\"\",\"name\":\"\"},\"easyQueryDefJson\":{\"sqlQuery\":\"\"},\"componentId\":9,\"componentName\":\"SQL 9\",\"tableName\":\"SQL_9\",\"category\":\"Processor\",\"componentType\":\"SQL\",\"rank\":0,\"dataSourceName\":\"\",\"displayRows\":50,\"dependencies\":[8],\"options\":{\"dbTable\":\"Select (CASE WHEN nvl( CAST(CUST_ID as String ) ,\\u0027null\\u0027) \\u003d nvl(CUST_ID_tgt , \\u0027null\\u0027) THEN CAST(CUST_ID as String) ELSE concat(\\u0027A : \\u0027,nvl( CAST(CUST_ID as String ) , \\u0027null\\u0027),\\u0027\\r\\n\\u0027,\\u0027 B : \\u0027 ,nvl(CUST_ID_tgt , \\u0027null\\u0027) ) END) as CUST_ID ,(CASE WHEN nvl(CUST_FIRST_NAME,\\u0027null\\u0027) \\u003d nvl(CUST_FIRST_NAME_tgt , \\u0027null\\u0027) THEN CUST_FIRST_NAME ELSE concat(\\u0027A : \\u0027,nvl(CUST_FIRST_NAME, \\u0027null\\u0027),\\u0027\\r\\n\\u0027,\\u0027 B : \\u0027 ,nvl(CUST_FIRST_NAME_tgt , \\u0027null\\u0027) ) END) as CUST_FIRST_NAME ,(CASE WHEN nvl(CUST_LAST_NAME,\\u0027null\\u0027) \\u003d nvl(CUST_LAST_NAME_tgt , \\u0027null\\u0027) THEN CUST_LAST_NAME ELSE concat(\\u0027A : \\u0027,nvl(CUST_LAST_NAME, \\u0027null\\u0027),\\u0027\\r\\n\\u0027,\\u0027 B : \\u0027 ,nvl(CUST_LAST_NAME_tgt , \\u0027null\\u0027) ) END) as CUST_LAST_NAME ,(CASE WHEN nvl(CUST_GENDER,\\u0027null\\u0027) \\u003d nvl(CUST_GENDER_tgt , \\u0027null\\u0027) THEN CUST_GENDER ELSE concat(\\u0027A : \\u0027,nvl(CUST_GENDER, \\u0027null\\u0027),\\u0027\\r\\n\\u0027,\\u0027 B : \\u0027 ,nvl(CUST_GENDER_tgt , \\u0027null\\u0027) ) END) as CUST_GENDER ,(CASE WHEN nvl( CAST(CUST_YEAR_OF_BIRTH as String ) ,\\u0027null\\u0027) \\u003d nvl(CAST(CUST_YEAR_OF_BIRTH_tgt as String )  , \\u0027null\\u0027) THEN CAST(CUST_YEAR_OF_BIRTH as String) ELSE concat(\\u0027A : \\u0027,nvl( CAST(CUST_YEAR_OF_BIRTH as String ) , \\u0027null\\u0027),\\u0027\\r\\n\\u0027,\\u0027 B : \\u0027 ,nvl(CAST(CUST_YEAR_OF_BIRTH_tgt as String )  , \\u0027null\\u0027) ) END) as CUST_YEAR_OF_BIRTH ,(CASE WHEN nvl(CUST_MARITAL_STATUS,\\u0027null\\u0027) \\u003d nvl(CUST_MARITAL_STATUS_tgt , \\u0027null\\u0027) THEN CUST_MARITAL_STATUS ELSE concat(\\u0027A : \\u0027,nvl(CUST_MARITAL_STATUS, \\u0027null\\u0027),\\u0027\\r\\n\\u0027,\\u0027 B : \\u0027 ,nvl(CUST_MARITAL_STATUS_tgt , \\u0027null\\u0027) ) END) as CUST_MARITAL_STATUS ,(CASE WHEN nvl(CUST_STREET_ADDRESS,\\u0027null\\u0027) \\u003d nvl(CUST_STREET_ADDRESS_tgt , \\u0027null\\u0027) THEN CUST_STREET_ADDRESS ELSE concat(\\u0027A : \\u0027,nvl(CUST_STREET_ADDRESS, \\u0027null\\u0027),\\u0027\\r\\n\\u0027,\\u0027 B : \\u0027 ,nvl(CUST_STREET_ADDRESS_tgt , \\u0027null\\u0027) ) END) as CUST_STREET_ADDRESS ,(CASE WHEN nvl(CUST_POSTAL_CODE,\\u0027null\\u0027) \\u003d nvl(CUST_POSTAL_CODE_tgt , \\u0027null\\u0027) THEN CUST_POSTAL_CODE ELSE concat(\\u0027A : \\u0027,nvl(CUST_POSTAL_CODE, \\u0027null\\u0027),\\u0027\\r\\n\\u0027,\\u0027 B : \\u0027 ,nvl(CUST_POSTAL_CODE_tgt , \\u0027null\\u0027) ) END) as CUST_POSTAL_CODE ,(CASE WHEN nvl(CUST_CITY,\\u0027null\\u0027) \\u003d nvl(CUST_CITY_tgt , \\u0027null\\u0027) THEN CUST_CITY ELSE concat(\\u0027A : \\u0027,nvl(CUST_CITY, \\u0027null\\u0027),\\u0027\\r\\n\\u0027,\\u0027 B : \\u0027 ,nvl(CUST_CITY_tgt , \\u0027null\\u0027) ) END) as CUST_CITY ,(CASE WHEN nvl( CAST(CUST_CITY_ID as String ) ,\\u0027null\\u0027) \\u003d nvl(CAST(CUST_CITY_ID_tgt as String )  , \\u0027null\\u0027) THEN CAST(CUST_CITY_ID as String) ELSE concat(\\u0027A : \\u0027,nvl( CAST(CUST_CITY_ID as String ) , \\u0027null\\u0027),\\u0027\\r\\n\\u0027,\\u0027 B : \\u0027 ,nvl(CAST(CUST_CITY_ID_tgt as String )  , \\u0027null\\u0027) ) END) as CUST_CITY_ID ,(CASE WHEN nvl(CUST_STATE_PROVINCE,\\u0027null\\u0027) \\u003d nvl(CUST_STATE_PROVINCE_tgt , \\u0027null\\u0027) THEN CUST_STATE_PROVINCE ELSE concat(\\u0027A : \\u0027,nvl(CUST_STATE_PROVINCE, \\u0027null\\u0027),\\u0027\\r\\n\\u0027,\\u0027 B : \\u0027 ,nvl(CUST_STATE_PROVINCE_tgt , \\u0027null\\u0027) ) END) as CUST_STATE_PROVINCE ,(CASE WHEN nvl( CAST(CUST_STATE_PROVINCE_ID as String ) ,\\u0027null\\u0027) \\u003d nvl(CAST(CUST_STATE_PROVINCE_ID_tgt as String )  , \\u0027null\\u0027) THEN CAST(CUST_STATE_PROVINCE_ID as String) ELSE concat(\\u0027A : \\u0027,nvl( CAST(CUST_STATE_PROVINCE_ID as String ) , \\u0027null\\u0027),\\u0027\\r\\n\\u0027,\\u0027 B : \\u0027 ,nvl(CAST(CUST_STATE_PROVINCE_ID_tgt as String )  , \\u0027null\\u0027) ) END) as CUST_STATE_PROVINCE_ID ,(CASE WHEN nvl( CAST(COUNTRY_ID as String ) ,\\u0027null\\u0027) \\u003d nvl(CAST(COUNTRY_ID_tgt as String )  , \\u0027null\\u0027) THEN CAST(COUNTRY_ID as String) ELSE concat(\\u0027A : \\u0027,nvl( CAST(COUNTRY_ID as String ) , \\u0027null\\u0027),\\u0027\\r\\n\\u0027,\\u0027 B : \\u0027 ,nvl(CAST(COUNTRY_ID_tgt as String )  , \\u0027null\\u0027) ) END) as COUNTRY_ID ,(CASE WHEN nvl(CUST_MAIN_PHONE_NUMBER,\\u0027null\\u0027) \\u003d nvl(CUST_MAIN_PHONE_NUMBER_tgt , \\u0027null\\u0027) THEN CUST_MAIN_PHONE_NUMBER ELSE concat(\\u0027A : \\u0027,nvl(CUST_MAIN_PHONE_NUMBER, \\u0027null\\u0027),\\u0027\\r\\n\\u0027,\\u0027 B : \\u0027 ,nvl(CUST_MAIN_PHONE_NUMBER_tgt , \\u0027null\\u0027) ) END) as CUST_MAIN_PHONE_NUMBER ,(CASE WHEN nvl(CUST_INCOME_LEVEL,\\u0027null\\u0027) \\u003d nvl(CUST_INCOME_LEVEL_tgt , \\u0027null\\u0027) THEN CUST_INCOME_LEVEL ELSE concat(\\u0027A : \\u0027,nvl(CUST_INCOME_LEVEL, \\u0027null\\u0027),\\u0027\\r\\n\\u0027,\\u0027 B : \\u0027 ,nvl(CUST_INCOME_LEVEL_tgt , \\u0027null\\u0027) ) END) as CUST_INCOME_LEVEL ,(CASE WHEN nvl( CAST(CUST_CREDIT_LIMIT as String ) ,\\u0027null\\u0027) \\u003d nvl(CAST(CUST_CREDIT_LIMIT_tgt as String )  , \\u0027null\\u0027) THEN CAST(CUST_CREDIT_LIMIT as String) ELSE concat(\\u0027A : \\u0027,nvl( CAST(CUST_CREDIT_LIMIT as String ) , \\u0027null\\u0027),\\u0027\\r\\n\\u0027,\\u0027 B : \\u0027 ,nvl(CAST(CUST_CREDIT_LIMIT_tgt as String )  , \\u0027null\\u0027) ) END) as CUST_CREDIT_LIMIT ,(CASE WHEN nvl(CUST_EMAIL,\\u0027null\\u0027) \\u003d nvl(CUST_EMAIL_tgt , \\u0027null\\u0027) THEN CUST_EMAIL ELSE concat(\\u0027A : \\u0027,nvl(CUST_EMAIL, \\u0027null\\u0027),\\u0027\\r\\n\\u0027,\\u0027 B : \\u0027 ,nvl(CUST_EMAIL_tgt , \\u0027null\\u0027) ) END) as CUST_EMAIL ,(CASE WHEN nvl(CUST_TOTAL,\\u0027null\\u0027) \\u003d nvl(CUST_TOTAL_tgt , \\u0027null\\u0027) THEN CUST_TOTAL ELSE concat(\\u0027A : \\u0027,nvl(CUST_TOTAL, \\u0027null\\u0027),\\u0027\\r\\n\\u0027,\\u0027 B : \\u0027 ,nvl(CUST_TOTAL_tgt , \\u0027null\\u0027) ) END) as CUST_TOTAL ,(CASE WHEN nvl( CAST(CUST_TOTAL_ID as String ) ,\\u0027null\\u0027) \\u003d nvl(CAST(CUST_TOTAL_ID_tgt as String )  , \\u0027null\\u0027) THEN CAST(CUST_TOTAL_ID as String) ELSE concat(\\u0027A : \\u0027,nvl( CAST(CUST_TOTAL_ID as String ) , \\u0027null\\u0027),\\u0027\\r\\n\\u0027,\\u0027 B : \\u0027 ,nvl(CAST(CUST_TOTAL_ID_tgt as String )  , \\u0027null\\u0027) ) END) as CUST_TOTAL_ID ,(CASE WHEN nvl( CAST(CUST_SRC_ID as String ) ,\\u0027null\\u0027) \\u003d nvl(CAST(CUST_SRC_ID_tgt as String )  , \\u0027null\\u0027) THEN CAST(CUST_SRC_ID as String) ELSE concat(\\u0027A : \\u0027,nvl( CAST(CUST_SRC_ID as String ) , \\u0027null\\u0027),\\u0027\\r\\n\\u0027,\\u0027 B : \\u0027 ,nvl(CAST(CUST_SRC_ID_tgt as String )  , \\u0027null\\u0027) ) END) as CUST_SRC_ID ,(CASE WHEN nvl(CUST_EFF_FROM,\\u0027null\\u0027) \\u003d nvl(CUST_EFF_FROM_tgt , \\u0027null\\u0027) THEN CUST_EFF_FROM ELSE concat(\\u0027A : \\u0027,nvl(CUST_EFF_FROM, \\u0027null\\u0027),\\u0027\\r\\n\\u0027,\\u0027 B : \\u0027 ,nvl(CUST_EFF_FROM_tgt , \\u0027null\\u0027) ) END) as CUST_EFF_FROM ,(CASE WHEN nvl(CUST_EFF_TO,\\u0027null\\u0027) \\u003d nvl(CUST_EFF_TO_tgt , \\u0027null\\u0027) THEN CUST_EFF_TO ELSE concat(\\u0027A : \\u0027,nvl(CUST_EFF_TO, \\u0027null\\u0027),\\u0027\\r\\n\\u0027,\\u0027 B : \\u0027 ,nvl(CUST_EFF_TO_tgt , \\u0027null\\u0027) ) END) as CUST_EFF_TO ,(CASE WHEN nvl(CUST_VALID,\\u0027null\\u0027) \\u003d nvl(CUST_VALID_tgt , \\u0027null\\u0027) THEN CUST_VALID ELSE concat(\\u0027A : \\u0027,nvl(CUST_VALID, \\u0027null\\u0027),\\u0027\\r\\n\\u0027,\\u0027 B : \\u0027 ,nvl(CUST_VALID_tgt , \\u0027null\\u0027) ) END) as CUST_VALID   from Data_Compare_3 where hash_src \\u003d hash_tgt and nvl(CUST_ID,\\u0027null\\u0027)  \\u003d nvl(CUST_ID_tgt,\\u0027null\\u0027)  \"},\"className\":\"com.datagaps.dataflow.models.SQLComponent\",\"isCheckpointEnabled\":\"N\",\"excludeNotification\":\"N\"},{\"dataframes\":[{\"dataframeId\":1,\"sourceDataFrame\":\"LOOKUP_2\",\"targetDataSourceId\":0,\"writeOptions\":{\"spark.sql.parquet.compression.codec\":\"snappy\"},\"name\":\"Target File 1\",\"targetType\":\"File\",\"format\":\"PARQUET\",\"isChecked\":true,\"runId\":0,\"columns\":[],\"partitionOptions\":{\"partitionType\":\"\",\"name\":\"\"},\"subfolderType\":\"Static\",\"subfolderName\":\"Target10_TargetFile1\",\"nameOption\":\"SQLExpression\",\"sqlExpression\":\"\",\"saveMode\":\"overwrite\",\"dataSourceLogicalName\":\"var_file_ds\"}],\"componentId\":10,\"componentName\":\"Target 10\",\"tableName\":\"\",\"category\":\"Sink\",\"componentType\":\"Target\",\"rank\":0,\"dataSourceName\":\"\",\"displayRows\":50,\"dependencies\":[9],\"className\":\"com.datagaps.dataflow.models.SyncComponent\",\"excludeNotification\":\"N\"}],\"isDeleteWorkSchemaTable\":\"N\"}","parameters":"[{\"name\":\"limit_rows\",\"defValueInInteractiveMode\":\"limit 10\",\"defValueInBatchMode\":\"limit 1000\"}]","version":3,"maxComponentId":10,"livyOptions":"{\"kind\":\"spark\",\"proxyUser\":\"\",\"jars\":[],\"pyFiles\":[],\"files\":[],\"driverMemory\":\"\",\"driverCores\":0,\"executorMemory\":\"\",\"executorCores\":0,\"numExecutors\":0,\"archives\":[],\"queue\":\"\",\"name\":\"\",\"conf\":{},\"heartbeatTimeoutInSecond\":0}","isDeleted":"N","userName":null,"type":"dataflow","environmentName":"Default","folderPath":"Dataflow/Abhishek","workSchemaName":null},"analysis":[],"datamodels":[],"tagDetails":[],"dataCompares":[]}